/**
 *
 * The Bipio Dropbox Pod.  generate_link action definition
 * ---------------------------------------------------------------
 *  Any file generated by a Bip can be saved to a folder in your Dropbox account
 *  under the Bipio App folder
 * ---------------------------------------------------------------
 *
 * @author Michael Pearson <github@m.bip.io>
 * Copyright (c) 2010-2013 Michael Pearson https://github.com/mjpearson
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var dbox = require('dropbox');

function GenerateLink(podConfig) {
    this.name = 'generate_link';
    this.title = 'Generate a File Link';
    this.description = 'Generates a direct Dropbox file link that you can share with others';
    this.trigger = false;
    this.singleton = false;
    this.podConfig = podConfig;
}

GenerateLink.prototype = {};

GenerateLink.prototype.getSchema = function() {
    return {
        'config' : { // config schema
            properties : {
                'direct_link' : {
                    type : 'boolean',
                    description : 'Generate a Direct Link to File, no Preview',
                    "default" : false
                },
                'short' : {
                    type : 'boolean',
                    description : 'Use Link Shortener',
                    "default" : true
                }
            }
        },
        'exports' : {
            properties : {
                'url' : {
                    type : 'string',
                    description : 'URL of File'
                },
                'expires_at' : {
                    type : 'string',
                    description : 'Expiry Date'
                },
                'is_direct' : {
                    type : 'string',
                    description : 'Is a Direct Link to the File'
                },
                'is_preview' : {
                    type : 'boolean',
                    description : 'Link is to Preview page'
                }
            }
        },
        "imports": {
            properties : {
                'path' : {
                    type : 'string',
                    description : 'File Path'
                }
            },
            required : [ 'path' ]
        }
    }
}

/**
 * Invokes (runs) the action.
 */
GenerateLink.prototype.invoke = function(imports, channel, sysImports, contentParts, next) {
    if (imports.path) {
        var client = new dbox.Client({
                key: this.podConfig.oauth.consumerKey,
                secret: this.podConfig.oauth.consumerSecret,
                sandbox: this.podConfig.oauth.sandbox
            });

        client.setCredentials({
            token : sysImports.auth.oauth.token,
            tokenSecret : sysImports.auth.oauth.secret
        });

        var opts = {
                'direct_link' : false
            },
            config = channel.getConfig();

        opts['download'] = config['direct_link'];
        opts['long'] = !config['short'];

        client.makeUrl(imports.path, opts, function(err, url) {
            var exports = {};
            if (!err) {
                exports.url = url.url;
                exports.expires_at = url.expiresAt;
                exports.is_direct = url.isDirect;
                exports.is_preview = url.isPreview
            }
            next(err, exports);
        });
    }
}

// -----------------------------------------------------------------------------
module.exports = GenerateLink;